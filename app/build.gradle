buildscript {
    ext.kotlin_version = '1.3.20'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.squareup.sqldelight:gradle-plugin:1.0.3"
        classpath 'com.android.tools.build:gradle:3.3.0'
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.20'
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://dl.bintray.com/rekotlin/rekotlin-multiplatform/" }
}

apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: "com.squareup.sqldelight"

sqldelight {
    packageName = "com.meowbox.progressions"
    sourceSet = files("src/commonMain/sqldelight")
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId 'org.jetbrains.kotlin.mpp_app_android'
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

kotlin {
    android("android")
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
//    iosX64("ios") {
//        compilations.main.outputKinds("framework")
//    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.1.1'
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.10.0'
                implementation 'org.rekotlin:rekotlin-multiplatform-metadata:0.0.1'
                implementation "com.squareup.sqldelight:runtime-metadata:1.0.3"
            }
        }
        commonTest {
            dependencies {
        		implementation kotlin('test-common')
        		implementation kotlin('test-annotations-common')
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.10.0'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.1.1'
                implementation "com.squareup.sqldelight:runtime-metadata:1.0.3"
            }
        }
        androidMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
                implementation 'joda-time:joda-time:2.10.1'
                implementation 'org.rekotlin:rekotlin-multiplatform-jvm:0.0.1'
                implementation "com.squareup.sqldelight:android-driver:1.0.3"
            }
        }
        androidTest {
            dependencies {
                implementation 'org.robolectric:robolectric:4.1'
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
//                implementation 'org.mockito:mockito-core:2.+'
                implementation 'joda-time:joda-time:2.10.1'
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0'
                implementation "com.squareup.sqldelight:android-driver:1.0.3"
                implementation "org.apache.commons:commons-csv:1.6"
            }
        }
//        iosMain {
//            dependencies {
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0'
//                implementation 'org.rekotlin:rekotlin-multiplatform-ios-sim:0.0.1'
//            }
//        }
//        iosTest {
//            dependencies {
//                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.10.0'
//            }
//        }
    }
}

// This task attaches native framework built from ios module to Xcode project
// (see iosApp directory). Don't run this task directly,
// Xcode runs this task itself during its build process.
// Before opening the project from iosApp directory in Xcode,
// make sure all Gradle infrastructure exists (gradle.wrapper, gradlew).
//task copyFramework {
//    def buildType = project.findProperty('kotlin.build.type') ?: 'DEBUG'
//    def target = project.findProperty('kotlin.target') ?: 'ios'
//    dependsOn kotlin.targets."$target".compilations.main.linkTaskName('FRAMEWORK', buildType)
//
//    doLast {
//        def srcFile = kotlin.targets."$target".compilations.main.getBinary('FRAMEWORK', buildType)
//        def targetDir = getProperty('configuration.build.dir')
//        copy {
//            from srcFile.parent
//            into targetDir
//            include 'app.framework/**'
//            include 'app.framework.dSYM'
//        }
//    }
//}